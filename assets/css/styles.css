/*  
Formas de ordenar los estilos CSS:
1. Posicionamiento (fix, relative, absolute)
2. Modelo de caja (Box model, padding, margin, width, height)
3. Tipografía (fuente, tamaño, tipo)
4. Efectos visuales (shadow-box, border-radius)
5. Misceláneos u otros.
*/

/**** Variables ****/
:root {
    /* Colores */
    --bitcoin-orange: #f7931a;
    --soft-orange: #ffe9d5;
    --secondary-blue: #1a9af7;
    --soft-blue: #e7f5ff;
    --warm-black: #282623;
    --black: #201e1c;
    --grey: #bababa;
    --off-white: #faf8f7;
    --just-white: #fff;
}

/**** Reiniciando estilos por defecto. ****/
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/**** Agregando la fuente de google fonts. ****/
html {
    font-size: 62.5%;
    font-family: "DM Sans", sans-serif;
}

/**** Estilos de la etiqueta <header> ****/
header {
    position: relative;
    display: flex;
    flex-direction: column;
    justify-content: center;
    width: 100%;
    min-width: 320px;
    height: 334px;
    text-align: center;
    background: linear-gradient(208.83deg, var(--black) 16.69%, var(--bitcoin-orange) 100%);
    /* Se crea una gradiente que tendrá 3 valores, 
    el primero los grados desde donde comenzara a calcularse la gradiente, 
    el segundo sera el primer color y el porcentaje que ocupara, 
    el tercero sera el segundo color y el porcentaje que ocupara. */
}
header img {
    width: 150px;
    height: 24px;
    margin-top: 60px;
    align-self: center; /* Funciona solo si el contenedor padre es de tipo flex. */

}
.header__title-container {
    width: 90%;
    min-width: 288px; /* No se achicara menos de 288 pixeles. */
    max-width: 900px; /* No se agrandara mas de 900 pixeles. */
    margin-top: 40px;
    text-align: center;
    align-self: center;
}
.header__title-container h1 {
    font-size: 2.4rem;
    font-weight: bold;
    line-height: 2.6rem; /* Altura de cada linea de texto, es mas conocido como interlineado. */
    color: var(--just-white);
}
.header__title-container p {
    margin-top: 25px;
    font-size: 1.4rem;    
    font-weight: 500;
    line-height: 1.8rem;
    color: var(--soft-orange);
}
.header__title-container .header__button {
    position: absolute; /* Si la posición es absoluta, puedo utilizar top, bottom, left y right para mover el contenido y 
    fijarlo donde lo necesite. */
    left: calc(50% - 118px); 
    /* calc es una función que nos ayuda a calcular dimensiones, en este caso, la regla es que desde la izquierda se mueva 
    un 50% hacia el centro, pero como el botón es muy grande, se pasa de la mitad de la pantalla, asi que se le restan una 
    cantidad definida de pixeles, que serian mas o menos el tamaño del botón, para lograr centrarlo en el centro, esta es la
    mejor forma de centrar un elemento que tiene una posición absoluta. */
    top: 270px;
    display: block;
    margin-top: 35px;
    padding: 15px;
    /* width: 229px; */
    height: 48px;
    background-color: var(--off-white);

    /* Sombra, es un estilo misceláneo, por eso va hasta el final de las reglas css de un elemento. */
    /* Los valores de rgba() son sacados directamente de figma, en caso de querer otro tipo de sombra se debe hablar con
    el diseñador. */
    box-shadow: 0px 4px 8px rgba(89, 73, 30, 0.16);
    border: none; /* le quito el borde. */
    border-radius: 5px;
    font-size: 1.4rem;
    font-weight: bold;
    text-decoration: none;
    color: var(--black);
}
.header__button span {
    display: inline-block; /* Para que el span se pueda ver tengo que cambiar el valor inline que tiene por defecto a 
    inline-block. */
    width: 13px;
    height: 8px;
    margin-left: 10px;
    background-image: url('../icons/down-arrow.svg'); /* Debo salir de la carpeta css, para ello en la ruta agrego dos puntos 
    al principio. */
}

/**** Estilos de la etiqueta <main>. ****/
main {
    width: 100%;
    height: auto; /* La altura sera automática ya que el mismo contenido ira definiendo la altura final. */
    background-color: var(--off-white);
}
.main-exchange-container {
    width: 100%;
    height: auto;
    padding-top: 80px;
    padding-bottom: 30px;
    text-align: center;
}
.main-exchange-container__title {
    width: 90%;
    min-width: 288px;
    max-width: 900ox;
    margin: 0 auto;
}
.main-exchange-container__img {
    width: 200px;
    height: 200px;
    margin: 0 auto;
    margin-bottom: 5rem;
    background-image: url("../img/Bitcoin.svg");
    /* También existen buenas practicas a la hora de utilizar imágenes, estas son: */
    background-size: cover; /* Si los elementos empiezan a crecer, con esto se evita que se deforme la imagen. */
    background-position: center; /* la imagen SIEMPRE se quedara en el centro. */
    background-repeat: no-repeat; /* Si la imagen es mas chica que el contenedor, se puede repetir para cubrir todo 
    el espacio, con esto se evita eso. */
}
.main-exchange-container h2 {
    margin-bottom: 30px;
    font-size: 2.4rem;
    font-weight: bold;
    line-height: 2.6rem;
    color: var(--black);
}
.main-exchange-container p {
    margin-bottom: 30px;
    font-size: 1.4rem;
    font-weight: 500;
    line-height: 1.6rem;
    color: #757575; /* Este color no esta guardado en una variable ya que se va a ocupar muy pocas veces. */
}
/* 
SE DEBE HACER UNA CORRECCIÓN IMPORTANTE.
Las medidas de with, height, margin, padding se deben dejar en pixeles y no rem porque si se cambia el tamaño de la fuente 
del dispositivo, el diseño de descuadra por completo ya que se hizo con esas medidas exactas ya que son absolutas.
Solo los estilos que tengan que ver con la fuente y los textos se debe cambiar a formato rem.
*/

/**** Estilos de la etiqueta <section> de intercambios. ****/
.main-currency-table {
    width: 70%;
    min-width: 235px;
    max-width: 500px;
    height: 360px;
    margin: 0 auto;
    font-family: "Inter", sans-serif;
}
/* Como tendré dos tablas por un tema de especificidad y para evitar conflictos, es mejor colocar ambas clases al mismo tiempo. */
.main-currency-table .currency-table__title {
    margin-bottom: 15px;
    font-size: 1.8rem;
    font-weight: bold;
    line-height: 2.3rem;
    color: var(--bitcoin-orange);
}
.currency-table__container {
    width: 90%;
    min-width: 230px;
    max-width: 300px;
    height: 250px;
    margin: 0 auto;

    display: flex;
    align-items: center;
}
.currency-table__container table {
    width: 100%;
    height: 100%;
}
.currency-table__container td {
    width: 50%;
    font-size: 1.6rem;
    font-weight: 500;
    line-height: 1.9rem;
    color: var(--grey);
    background-color: var(--just-white);
}
.currency-table__container .table--top-left {
    border-radius: 15px 0 0 0 ; /* Solo se redondea la esquina superior izquierda. */
}
.currency-table__container .table--top-right {
    border-radius: 0 15px 0 0; /* Solo se redondea la esquina superior derecha. */
}
.currency-table__container .table--bottom-left {
    border-radius: 0 0 0 15px; /* Solo se redondea la esquina inferior derecha */
}
.currency-table__container .table--bottom-right {
    border-radius: 0 0 15px 0;
}
.currency-table__container .table--right {
    font-size: 1.4rem;
    font-weight: normal;
    line-height: 1.7rem;
    color: #757575;
}
.currency-table__container .down {
    display: inline-block;
    width: 15px;
    height: 15px;
    margin-left: 10px;
    background-image: url("../icons/trending-down.svg");
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
}
.currency-table__container .up {
    display: inline-block;
    width: 15px;
    height: 15px;
    margin-left: 10px;
    background-image: url("../icons/trending-up.svg");
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
}
.currency-table__date {
    width: 190px;
    height: 30px;
    margin: 0 auto;
    margin-top: 15px;
    padding: 8px;
    background-color: var(--soft-orange);
    border-radius: 8px;
}
.currency-table__date p {
    font-size: 1.2rem;
    font-weight: 300;
    line-height: 1.5rem;
    color: var(--warm-black);
}
/* Desafió clase 17 
Creo mi propio botón de flecha, utilizando la flecha que apunta hacia abajo, y css para cambiar su
posición mediante la rotación.
*/
.currency-table__container .arrow--right {
    width: 15px;
    height: 15px;
    margin-left: 4px;
    background-image: url("../icons/down-arrow.svg");
    background-position: center;
    background-repeat: no-repeat;
    transform: rotate(270deg);
}

/* Desafió clase 17 
Crear la tabla de de comisiones utilizando los estilos que se muestran en figma.
Ademas agregar los botones de flecha para cambiar la tabla que se muestre al presionar el botón.
*/
.main-commission-table {
    width: 70%;
    min-width: 235px;
    max-width: 500px;
    height: 360px;
    margin: 0 auto;
    font-family: "Inter", sans-serif;
}
.main-commission-table .commission-table__title {
    margin-bottom: 15px;
    font-size: 1.8rem;
    font-weight: bold;
    line-height: 2.3rem;
    color: var(--secondary-blue);
}
.commission-table__container {
    width: 90%;
    min-width: 230px;
    max-width: 300px;
    height: 250px;
    margin: 0 auto;
    display: flex;
    align-items: center;
}
.commission-table__container table {
    width: 100%;
    height: 100%;
}
.commission-table__container td {
    width: 50%;
    font-size: 1.6rem;
    font-weight: 500;
    line-height: 1.9rem;
    color: var(--grey);
    background-color: var(--just-white);
    
}
.commission-table__container .table--top-left {
    border-radius: 15px 0 0 0 ; 
}
.commission-table__container .table--top-right {
    border-radius: 0 15px 0 0;
}
.commission-table__container .table--bottom-left {
    border-radius: 0 0 0 15px;
}
.commission-table__container .table--bottom-right {
    border-radius: 0 0 15px 0;
}
.commission-table__container .table--right {
    font-size: 1.4rem;
    font-weight: normal;
    line-height: 1.7rem;
    color: #757575;
}
.commission-table__date {
    width: 190px;
    height: 30px;
    margin: 0 auto;
    margin-top: 15px;
    padding: 8px;
    background-color: var(--soft-blue);
    border-radius: 8px;
}
.commission-table__date p {
    font-size: 1.2rem;
    font-weight: 300;
    line-height: 1.5rem;
    color: var(--warm-black);
}
/* Desafió clase 17 
Creo mi propio botón de flecha, utilizando la flecha que apunta hacia abajo, y css para cambiar su
posición mediante la rotación.
*/
.commission-table__container .arrow--left {
    width: 15px;
    height: 15px;
    margin-right: 4px;
    background-image: url("../icons/down-arrow.svg");
    background-position: center;
    background-repeat: no-repeat;
    transform: rotate(90deg);
}

/**** Estilos de la etiqueta <section> de productos. ****/
.main-product-detail {
    position: relative;
    width: 100%;
    min-width: 320px; /* Es importante definir el tamaño mínimo de los contenedores en 320 pixeles ya que no hay teléfono 
    mas pequeño que este. */
    height: auto;
    padding: 20px 10px;
    background-color: var(--black);
}
.product-detail__batata-logo {
    position: absolute; /* La posición sera absoluta porque se debe colocar el icono entre dos contenedores. */
    width: 40px;
    height: 25px;
    top: -10px; /* Al agregar el top con un valor negativo el icono sube y se posiciona entre los contenedores. */
    left: calc(50% - 20px); /* Si solo coloco el 50%, el icono de la papa se centrara en el centro desde el inicio, eso hará 
    que el icono se vea corrido, y ya que el tamaño es de 40 pixeles, le debo restar 20 pixeles que es la mitad para poder 
    centrarlo en el medio. */
    background-image: url('../icons/batata.svg');
}
.product-detail__title {
    width: 90%;
    min-width: 288px;
    height: auto;
    margin: 0 auto;
    margin-top: 50px;
    text-align: center;
}
.product-detail__title h2 {
    margin-bottom: 20px;
    font-size: 2.4rem;
    font-weight: bold;
    line-height: 2.6rem;
    color: var(--just-white);
}
.product-detail__title p {
    margin-bottom: 20px;
    font-size: 1.4rem;
    font-weight: 500;
    line-height: 1.8rem;
    color: #808080;
}
.product-detail__card {
    width: 90%;
    min-width: 288px;
    max-width: 400px;
    min-height: 150px;
    margin: 15px auto;
    padding: 15px;
    background-color: var(--warm-black);
    border-radius: 5px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.16);
}
.product-detail__card .clock {
    display: inline-block;
    width: 20px;
    height: 20px;
    margin: 0 auto;
    margin-bottom: 10px;
    background-image: url("../icons/clock.svg");
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
}
/* Desafió clase 20
Se deben agregar las demás tarjetas de la sección beneficio, junto a los iconos que corresponden a cada una.
*/
.product-detail__card .eye {
    display: inline-block;
    width: 20px;
    height: 20px;
    margin: 0 auto;
    margin-bottom: 10px;
    background-image: url("../icons/eye.svg");
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
}
.product-detail__card .dolar {
    display: inline-block;
    width: 20px;
    height: 20px;
    margin: 0 auto;
    margin-bottom: 10px;
    background-image: url("../icons/dollar-sign.svg");
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
}
.product-detail__card .check {
    display: inline-block;
    width: 20px;
    height: 20px;
    margin: 0 auto;
    margin-bottom: 10px;
    background-image: url("../icons/check-circle.svg");
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
}

.product__card-title {
    margin-bottom: 15px;
    font-size: 1.8rem;
    font-weight: bold;
    line-height: 1.8rem;
    color: var(--just-white);
}
.product__card-body {
    font-size: 1.4rem;
    font-weight: 500;
    line-height: 1.8rem;
    color: #808080;
}

/**** Estilos de la etiqueta <section> comodín. ****/
.bitcoin-img-container {
    width: 100%;
    min-width: 320px;
    height: 50vh;
    background-image: url("../img/bitcoinbaby2x.jpg");
    background-position: center;
    background-size: cover;
    background-repeat: no-repeat;
    text-align: center;
}
.bitcoin-img-container h2 {
    padding-top: 60px;
    font-size: 2.4rem;
    font-weight: bold;
    line-height: 2.6rem;
    color: var(--just-white);
}

/**** Estilos de la etiqueta <section> planes. ****/
.main-plans-container {
    width: 100%;
    min-width: 320px;
    padding-bottom: 70px;
    text-align: center;
}
.plans__title {
    width: 90%;
    min-width: 288px;
    height: auto;
    margin: 0 auto;
    margin-bottom: 50px;
}
.plans__title h2 {
    padding-top: 50px;
    font-size: 2.4rem;
    font-weight: bold;
    line-height: 2.6rem;
    color: var(--black);
}
.plans__title p {
    padding-top: 30px;
    font-size: 1.4rem;
    font-weight: 500;
    line-height: 1.8rem;
    color: #757575;
}

/* Desafió Clase 17 
Creo mi propia clase de CSS para ocultar elementos, en la vista móvil la segunda tabla no se vera.
Mediante JavaScript se realizara un cambio agregando y removiendo clases de cada tabla.
*/
.d--none {
    display: none;
}

/* Código media queries de practica, para probar alinear las dos tablas en una vista de escritorio. */
@media (min-width: 800px) {
    .main-tables-container {
        display: flex;
        max-width: 900px;
        margin: 0 auto;
    }
    .d--none {
        display: block;
    }
    .arrow--right {
        display: none;
    }
    .arrow--left {
        display: none;
    }
}